<?xml version="1.0" encoding="UTF-8"?>
<includes>	
	<!-- Video Extras -->
	<variable name="VideoExtrasLogo">
		<value condition="String.Contains(ListItem.Path),BDMV">$INFO[ListItem.Path,../,logo.png]</value>
		<value>$INFO[ListItem.Path,,logo.png]</value>
	</variable>
	<!-- END Video Extras -->
	
	<!-- Global Search -->
	<variable name="GlobalSearchNumItems">
		<value condition="Control.IsVisible(111) + !String.IsEqual(Container(111).NumItems,0)">$INFO[Container(111).NumItems]</value>
		<value condition="Control.IsVisible(211) + !String.IsEqual(Container(211).NumItems,0)">$INFO[Container(211).NumItems]</value>
		<value condition="Control.IsVisible(231) + !String.IsEqual(Container(231).NumItems,0)">$INFO[Container(231).NumItems]</value>
		<value condition="Control.IsVisible(121) + !String.IsEqual(Container(121).NumItems,0)">$INFO[Container(121).NumItems]</value>
		<value condition="Control.IsVisible(131) + !String.IsEqual(Container(131).NumItems,0)">$INFO[Container(131).NumItems]</value>
		<value condition="Control.IsVisible(141) + !String.IsEqual(Container(141).NumItems,0)">$INFO[Container(141).NumItems]</value>
		<value condition="Control.IsVisible(151) + !String.IsEqual(Container(151).NumItems,0)">$INFO[Container(151).NumItems]</value>
		<value condition="Control.IsVisible(161) + !String.IsEqual(Container(161).NumItems,0)">$INFO[Container(161).NumItems]</value>
		<value condition="Control.IsVisible(171) + !String.IsEqual(Container(171).NumItems,0)">$INFO[Container(171).NumItems]</value>
		<value condition="Control.IsVisible(181) + !String.IsEqual(Container(181).NumItems,0)">$INFO[Container(181).NumItems]</value>
		<value condition="Control.IsVisible(221) + !String.IsEqual(Container(221).NumItems,0)">$INFO[Container(221).NumItems]</value>
	</variable>
	
	<variable name="GlobalSearchInfoDialogLabel1">
		<value condition="Control.IsVisible(130) | Control.IsVisible(140)">$INFO[Container(100).ListItem.Property(TvShowTitle)]</value>
		<value>$INFO[Container(100).ListItem.Label]</value>
	</variable>
	
	<variable name="GlobalSearchInfoDialogLabel2">
		<value condition="Control.IsVisible(130)">$INFO[Container(100).ListItem.Label]</value>
		<value condition="Control.IsVisible(140)">$INFO[Container(100).ListItem.Label,","]</value>
		<value condition="Control.IsVisible(160)">$INFO[Container(100).ListItem.Property(Artist_Genre)]</value>
		<value>$INFO[Container(100).ListItem.Property(Genre)]</value>
	</variable>
	
	<variable name="GlobalSearchDescription">
		<value condition="Control.IsVisible(160)">$INFO[Container(100).ListItem.Property(Artist_Description)]</value>
		<value condition="Control.IsVisible(170)">$INFO[Container(100).ListItem.Property(Album_Description)]</value>
		<value condition="Control.IsVisible(180)">$INFO[Container(100).ListItem.Property(Comment)]</value>
		<value condition="Control.IsVisible(200)">$INFO[Container(100).ListItem.Property(Plot)]</value>
	</variable>
	
	<variable name="GlobalSearchFanart">
		<value condition="Control.HasFocus(111) + !String.IsEmpty(Container(111).ListItem.Property(Fanart))">$INFO[Container(111).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(121) + !String.IsEmpty(Container(121).ListItem.Property(Fanart))">$INFO[Container(121).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(131) + !String.IsEmpty(Container(131).ListItem.Property(Fanart))">$INFO[Container(131).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(141) + !String.IsEmpty(Container(141).ListItem.Property(Fanart))">$INFO[Container(141).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(151) + !String.IsEmpty(Container(151).ListItem.Property(Fanart))">$INFO[Container(151).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(211) + !String.IsEmpty(Container(211).ListItem.Property(Fanart))">$INFO[Container(211).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(231) + !String.IsEmpty(Container(231).ListItem.Property(Fanart))">$INFO[Container(231).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(221) + !String.IsEmpty(Container(221).ListItem.Property(Fanart))">$INFO[Container(221).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(161) + !String.IsEmpty(Container(161).ListItem.Property(Fanart))">$INFO[Container(161).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(171) + !String.IsEmpty(Container(171).ListItem.Property(Fanart))">$INFO[Container(171).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(181) + !String.IsEmpty(Container(181).ListItem.Property(Fanart))">$INFO[Container(181).ListItem.Property(Fanart)]</value>
	</variable>
	
	<variable name="GlobalSearchClearlogo">
		<value condition="Control.HasFocus(111) + !String.IsEmpty(Container(111).ListItem.Property(art(clearlogo)))">$INFO[Container(111).ListItem.Property(art(clearlogo))]</value>
		<value condition="Control.HasFocus(211) + !String.IsEmpty(Container(211).ListItem.Property(art(clearlogo)))">$INFO[Container(211).ListItem.Property(art(clearlogo))]</value>
		<value condition="Control.HasFocus(231) + !String.IsEmpty(Container(231).ListItem.Property(art(clearlogo)))">$INFO[Container(231).ListItem.Property(art(clearlogo))]</value>
		<value condition="Control.HasFocus(121) + !String.IsEmpty(Container(121).ListItem.Property(art(clearlogo)))">$INFO[Container(121).ListItem.Property(art(clearlogo))]</value>
		<value condition="Control.HasFocus(131) + !String.IsEmpty(Container(131).ListItem.Property(art(clearlogo)))">$INFO[Container(131).ListItem.Property(art(clearlogo))]</value>
		<value condition="Control.HasFocus(141) + !String.IsEmpty(Container(141).ListItem.Property(art(clearlogo)))">$INFO[Container(141).ListItem.Property(art(clearlogo))]</value>
		<value condition="Control.HasFocus(151) + !String.IsEmpty(Container(151).ListItem.Property(art(clearlogo)))">$INFO[Container(151).ListItem.Property(art(clearlogo))]</value>
		<value condition="Control.HasFocus(161) + !String.IsEmpty(Container(161).ListItem.Property(art(clearlogo)))">$INFO[Container(161).ListItem.Property(art(clearlogo))]</value>
		<value condition="Control.HasFocus(171) + !String.IsEmpty(Container(171).ListItem.Property(art(clearlogo)))">$INFO[Container(171).ListItem.Property(art(clearlogo))]</value>
		<value condition="Control.HasFocus(181) + !String.IsEmpty(Container(181).ListItem.Property(art(clearlogo)))">$INFO[Container(181).ListItem.Property(art(clearlogo))]</value>
		<value condition="Control.HasFocus(221) + !String.IsEmpty(Container(221).ListItem.Property(art(clearlogo)))">$INFO[Container(221).ListItem.Property(art(clearlogo))]</value>
	</variable>
	
	<variable name="GlobalSearchPosterThumb">
		<value condition="!String.IsEmpty(ListItem.Property(art(poster)))">$INFO[ListItem.Property(art(poster))]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	
	<include name="GlobalSearchVideoSourceMediaFlags">
		<control type="image" id="600">
			<description>Blu-ray</description>
			<width>49</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/bluray.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Path),bluray) | String.Contains(Container(100).ListItem.Property(Path),blu-ray) | String.Contains(Container(100).ListItem.Property(Path),brrip) | String.Contains(Container(100).ListItem.Property(Path),bd25) | String.Contains(Container(100).ListItem.Property(Path),bd50)</visible>
		</control>
		<control type="image" id="694">
			<description>Web-DL</description>
			<width>49</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/web-dl.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>[String.Contains(Container(100).ListItem.Property(Path),web-dl) | String.Contains(Container(100).ListItem.Property(Path),web-download)] + ![String.Contains(Container(100).ListItem.Property(VideoCodec),vp8) | String.Contains(Container(100).ListItem.Property(VideoCodec),vp9)]</visible>
		</control>
		<control type="image" id="601">
			<description>3D</description>
			<width>65</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/3d.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Path),.3d.) | String.Contains(Container(100).ListItem.Property(Path),hsbs) | String.Contains(Container(100).ListItem.Property(Path),sbs) | String.Contains(Container(100).ListItem.Property(Path),half-sbs)</visible>
		</control>
		<control type="image" id="602">
			<description>HDDVD</description>
			<width>82</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/hddvd.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(ListItem.FilenameAndPath,hddvd) | String.Contains(ListItem.FilenameAndPath,hd-dvd)</visible>
		</control>
		<control type="image" id="718">
			<description>DVD</description>
			<width>55</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/dvd.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>[String.Contains(ListItem.FileExtension,iso) | String.Contains(ListItem.FileExtension,img) | String.Contains(ListItem.FilenameAndPath,dvd) | String.Contains(ListItem.FileExtension,ifo) | String.Contains(ListItem.FileExtension,vob) | String.Contains(ListItem.FilenameAndPath,dvdrip) | String.Contains(ListItem.FilenameAndPath,dvdr5) | String.Contains(ListItem.FilenameAndPath,.r5) | String.Contains(ListItem.FilenameAndPath,dvdscreener) | String.Contains(ListItem.FilenameAndPath,dvdscr) | String.Contains(ListItem.FilenameAndPath,screener)] + ![String.Contains(ListItem.FilenameAndPath,hddvd) | String.Contains(ListItem.FilenameAndPath,hd-dvd)]</visible>
		</control>
		<control type="image" id="603">
			<description>HDTV</description>
			<width>74</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/hdtv.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Path),hdtv) | String.Contains(Container(100).ListItem.Property(Path),hdrip)</visible>
		</control>
		<control type="image" id="604">
			<description>SDTV</description>
			<width>74</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/sdtv.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Path),PDTV) | String.Contains(Container(100).ListItem.Property(Path),sdtv)</visible>
		</control>
		<control type="image" id="608">
			<description>Telesync</description>
			<width>41</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/film.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Path),.telesync) | String.Contains(Container(100).ListItem.Property(Path),.ts.)</visible>
		</control>
		<control type="image" id="609">
			<description>Cam</description>
			<width>41</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/film.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Path),.cam)</visible>
		</control>
		<control type="image" id="678">
			<description>VHS</description>
			<width>64</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/vhs.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Path),vhs)</visible>
		</control>
	</include>
	
	<include name="GlobalSearchVideoCodecMediaFlags">
		<control type="image" id="610">
			<description>Xvid Codec</description>
			<width>57</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/xvid.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),xvid)</visible>
		</control>
		<control type="image" id="611">
			<description>Divx Codec</description>
			<width>67</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/divx.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),divx) | String.Contains(Container(100).ListItem.Property(VideoCodec),div2) | String.Contains(Container(100).ListItem.Property(VideoCodec),div3) | String.Contains(Container(100).ListItem.Property(VideoCodec),div4) | String.Contains(Container(100).ListItem.Property(VideoCodec),divx 4) | String.Contains(Container(100).ListItem.Property(VideoCodec),div5) | String.Contains(Container(100).ListItem.Property(VideoCodec),dx50)</visible>
		</control>
		<control type="image" id="612">
			<description>H264 Codec</description>
			<width>61</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/h264.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),h264) | String.Contains(Container(100).ListItem.Property(VideoCodec),x264) | String.Contains(Container(100).ListItem.Property(VideoCodec),hdmv)</visible>
		</control>
		<control type="image" id="698">
			<description>H265 Codec</description>
			<width>61</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/hevc.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),hevc)</visible>
		</control>
		<control type="image" id="613">
			<description>AVC1 Codec</description>
			<width>61</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/avc1.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),avc1)</visible>
		</control>
		<control type="image" id="614">
			<description>WVC1 Codec</description>
			<width>80</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/wvc1.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),wvc1) | String.Contains(Container(100).ListItem.Property(VideoCodec),vc-1)</visible>
		</control>
		<control type="image" id="680">
			<description>WMV Codec</description>
			<width>80</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/wmv.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),wmv) | String.Contains(Container(100).ListItem.Property(VideoCodec),wmv2) | String.Contains(Container(100).ListItem.Property(VideoCodec),wmv3)</visible>
		</control>
		<control type="image" id="615">
			<description>MPEG-1 Codec</description>
			<width>57</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/mpeg1video.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),mpeg1video)</visible>
		</control>
		<control type="image" id="616">
			<description>MPEG-2 Codec</description>
			<width>57</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/mpeg2video.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),mpeg2video) | String.Contains(Container(100).ListItem.Property(VideoCodec),mpeg video) | String.Contains(Container(100).ListItem.Property(VideoCodec),mpeg2)</visible>
		</control>
		<control type="image" id="617">
			<description>MPEG-4 Codec</description>
			<width>57</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/mpeg4video.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),mpeg-4 visual) | String.Contains(Container(100).ListItem.Property(VideoCodec),mpg4) | String.Contains(Container(100).ListItem.Property(VideoCodec),mp4v)</visible>
		</control>
		<control type="image" id="618">
			<description>Sorenson Video Codec</description>
			<width>36</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/svq3.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),svq1) | String.Contains(Container(100).ListItem.Property(VideoCodec),svq3)</visible>
		</control>		
		<control type="image" id="695">
			<description>VP8 and VP9 Video Codec</description>
			<width>36</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/vp8.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),vp8) | String.Contains(Container(100).ListItem.Property(VideoCodec),vp9)</visible>
		</control>
		<control type="image" id="619">
			<description>Flash Video Codec</description>
			<width>22</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/video/flv.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(VideoCodec),flv)</visible>
		</control>
		<control type="image" id="620">
			<description>Video Resolution</description>
			<left>-5</left>
			<width>48</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<texture>flagging/$VAR[MediaFlagTheme]/video/$INFO[Container(100).ListItem.Property(VideoResolution)].png</texture>
			<visible>!String.IsEmpty(Container(100).ListItem.Property(VideoCodec)) + !Skin.HasSetting(HideVideoResMediaFlag)</visible>
		</control>
		<control type="image" id="621">
			<description>Right Border</description>
			<left>-5</left>
			<width>4</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<texture>flagging/$VAR[MediaFlagTheme]/flag-right-border.png</texture>
			<visible>!String.IsEmpty(Container(100).ListItem.Property(VideoCodec)) + Skin.HasSetting(HideVideoResMediaFlag)</visible>
		</control>
	</include>
	

	<include name="GlobalSearchAudioMediaFlags">
		<control type="image" id="622">
			<description>MP3 Codec</description>
			<width>55</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/mp3.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,mp3)</visible>
		</control>
		<control type="image" id="623">
			<description>MP2 Codec</description>
			<width>53</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/mp2.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,mp2)</visible>
		</control>
		<control type="image" id="624">
			<description>MP1 Codec</description>
			<width>53</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/mp1.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,mp1)</visible>
		</control>
		<control type="image" id="700">
			<description>Opus Codec</description>
			<width>53</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/opus.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,opus)</visible>
		</control>
		<control type="image" id="625">
			<description>DTS Codec</description>
			<width>50</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/dts.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,dca) + ![String.Contains(Container(10051).ListItem.FileNameAndPath,dtses) | String.Contains(Container(10051).ListItem.FileNameAndPath,dts-es)]</visible>
		</control>
		<control type="image" id="740">
			<description>DTS-ES Codec</description>
			<width>66</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/dtses.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,dca) + [String.Contains(Container(10051).ListItem.FileNameAndPath,dtses) | String.Contains(Container(10051).ListItem.FileNameAndPath,dts-es)]</visible>
		</control>
		<control type="image" id="682">
			<description>PCM Codec</description>
			<width>59</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/pcm.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,pcm_s16be) | String.Contains(Container(10051).ListItem.AudioCodec,pcm_s16le) | String.Contains(Container(10051).ListItem.AudioCodec,pcm_u8) | String.Contains(Container(10051).ListItem.AudioCodec,pcm_bluray)</visible>
		</control>
		<control type="image" id="626">
			<description>AAC Codec</description>
			<width>40</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/aac.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,aac)</visible>
		</control>
		<control type="image" id="627">
			<description>Dolby Digital/AC3 Codec</description>
			<width>66</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/dolbydigital.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>[String.Contains(Container(10051).ListItem.AudioCodec,ac3) | String.Contains(Container(10051).ListItem.AudioCodec,ac-3)] + !String.Contains(Container(10051).ListItem.AudioCodec,eac3)</visible>
		</control>
		<control type="image" id="688">
			<description>EAC3 Codec</description>
			<width>66</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/eac3.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,eac3) + !String.Contains(Container(10051).ListItem.FileNameAndPath,.atmos)</visible>
		</control>
		<control type="image" id="628">
			<description>TrueHD Codec</description>
			<width>60</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/truehd.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,truehd) + !String.Contains(Container(10051).ListItem.FileNameAndPath,.atmos)</visible>
		</control>
		<control type="image" id="722">
			<description>Atmos Codec</description>
			<width>66</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/atmos.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>[String.Contains(Container(10051).ListItem.AudioCodec,eac3) | String.Contains(Container(10051).ListItem.AudioCodec,truehd)] + String.Contains(Container(10051).ListItem.FileNameAndPath,.atmos)</visible>
		</control>
		<control type="image" id="629">
			<description>WMA STD V2/WMA Codec</description>
			<width>80</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/wma.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,wmav2) | String.Contains(Container(10051).ListItem.AudioCodec,wma)</visible>
		</control>
		<control type="image" id="686">
			<description>WMA Pro Codec</description>
			<width>80</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/wmapro.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,wmapro)</visible>
		</control>
		<control type="image" id="630">
			<description>FLAC Codec</description>
			<width>48</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/flac.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,flac)</visible>
		</control>
		<control type="image" id="631">
			<description>Vorbis Codec</description>
			<width>42</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/vorbis.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,vorbis)</visible>
		</control>
		<control type="image" id="684">
			<description>OGG Codec</description>
			<width>42</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/ogg.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,ogg)</visible>
		</control>
		<control type="image" id="632">
			<description>DTS-HD Codec</description>
			<width>66</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/$VAR[EmbuaryDTSHDMediaFlag]</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(10051).ListItem.AudioCodec,dtshd_ma) | String.Contains(Container(10051).ListItem.AudioCodec,dtshd_hra)</visible>
		</control>
		<control type="image" id="634">
			<description>Audio Channels</description>
			<left>-5</left>
			<width>43</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/audio/$INFO[Window.Property(AudioChannels)].png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>!String.IsEmpty(Container(10051).ListItem.AudioCodec)</visible>
		</control>
	</include>


	<include name="GlobalSearchAspectMediaFlags">
		<control type="image" id="633">
			<description>Aspect Ratio</description>
			<width>50</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/aspectratio/$INFO[Container(100).ListItem.Property(VideoAspect)].png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>!String.IsEmpty(Container(100).ListItem.Property(VideoAspect))</visible>
		</control>
	</include>

	<include name="GlobalSearchRatingMediaFlags">
		<control type="image" id="634">
			<description>Rated General</description>
			<width>26</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/mpaa-general.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Mpaa),Rated G) | String.Contains(Container(100).ListItem.Property(Mpaa),US:G) | String.Contains(Container(100).ListItem.Property(Mpaa),USA:G)</visible>  
		</control>
		<control type="image" id="635">
			<description>Rated PG</description>
			<width>40</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/mpaa-pg.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>[String.Contains(Container(100).ListItem.Property(Mpaa),Rated PG) + !String.Contains(Container(100).ListItem.Property(Mpaa),Rated PG-13)] | [String.Contains(Container(100).ListItem.Property(Mpaa),US:PG) + !String.Contains(Container(100).ListItem.Property(Mpaa),US:PG-13)] | [String.Contains(Container(100).ListItem.Property(Mpaa),USA:PG) + !String.Contains(Container(100).ListItem.Property(Mpaa),USA:PG-13)]</visible>  
		</control>
		<control type="image" id="636">
			<description>Rated PG-13</description>
			<width>63</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/mpaa-pg13.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Mpaa),Rated PG-13) | String.Contains(Container(100).ListItem.Property(Mpaa),US:PG-13) | String.Contains(Container(100).ListItem.Property(Mpaa),USA:PG-13)</visible>  
		</control>
		<control type="image" id="637">
			<description>Rated R</description>
			<width>34</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/mpaa-restricted.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Mpaa),Rated R) | String.Contains(Container(100).ListItem.Property(Mpaa),US:R) | String.Contains(Container(100).ListItem.Property(Mpaa),USA:R)</visible>  
		</control>
		<control type="image" id="638">
			<description>Rated NC-17</description>
			<width>63</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/mpaa-nc17.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Mpaa),Rated NC-17) | String.Contains(Container(100).ListItem.Property(Mpaa),US:NC-17) | String.Contains(Container(100).ListItem.Property(Mpaa),USA:NC-17)</visible>  
		</control>
		<control type="image" id="702">
			<description>Rated UK U</description>
			<width>27</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/mpaa-uk-u.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Mpaa),UK:U)</visible>  
		</control>
		<control type="image" id="703">
			<description>Rated UK PG</description>
			<width>36</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/mpaa-uk-pg.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Mpaa),UK:PG)</visible>  
		</control>
		<control type="image" id="704">
			<description>Rated UK 12</description>
			<width>32</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/mpaa-uk-12.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Mpaa),UK:12) + !String.Contains(Container(100).ListItem.Property(Mpaa),UK:12a)</visible>  
		</control>
		<control type="image" id="705">
			<description>Rated UK 12A</description>
			<width>43</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/mpaa-uk-12a.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Mpaa),UK:12a)</visible>  
		</control>
		<control type="image" id="706">
			<description>Rated UK 15</description>
			<width>32</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/mpaa-uk-15.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Mpaa),UK:15)</visible>  
		</control>
		<control type="image" id="707">
			<description>Rated UK 18</description>
			<width>32</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/mpaa-uk-18.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Mpaa),UK:18)</visible>  
		</control>
		<control type="image" id="708">
			<description>Rated UK R18</description>
			<width>43</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/mpaa-uk-r18.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Mpaa),UK:R18)</visible>  
		</control>
		<control type="image" id="738">
			<description>Unrated</description>
			<width>44</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/unrated.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.Contains(Container(100).ListItem.Property(Path),.unrated)</visible>  
		</control>
		<control type="image" id="739">
			<description>No Rating</description>
			<width>44</width>
			<height>35</height>
			<aspectratio>stretch</aspectratio>
			<texture>flagging/$VAR[MediaFlagTheme]/ratings/no-rating.png</texture>
			<!--<fadetime>MediaFlagsCrossfadeTime</fadetime>-->
			<visible>String.IsEmpty(Container(100).ListItem.Property(Mpaa)) + !String.Contains(Container(100).ListItem.Property(Path),.unrated)</visible>  
		</control>
	</include>
	
	<include name="GlobalSearchStudioMediaFlag">
		<control type="group">
			<visible>!String.IsEmpty(Container(100).ListItem.Property(Studio))</visible>
			
			<control type="image" id="692">
				<width>58</width>
				<height>35</height>
				<texture border="6">flagging/$VAR[MediaFlagTheme]/flag-bg.png</texture>
				<animation effect="fade" end="95" condition="true">Conditional</animation>
			</control>
					
			<control type="image" id="693">
				<description>Studio Flag</description>
				<width>58</width>
				<height>35</height>
				<aspectratio>stretch</aspectratio>
				<texture>resource://resource.images.studios.white/$INFO[Container(100).ListItem.Property(Studio)].png</texture>
				<animation effect="fade" end="70" condition="true">Conditional</animation>
			</control>
		</control>
	</include>
	<!-- END Global Search -->
	
	<!-- Extended Info -->
	<variable name="ExtendedInfoThumb">
		<value condition="Skin.String(ExtendedInfo,2)">$INFO[Container(150).ListItem.Thumb]</value>
		<value condition="Skin.String(ExtendedInfo,3)">$INFO[Container(250).ListItem.Thumb]</value>
		<value condition="Skin.String(ExtendedInfo,4)">$INFO[Container(550).ListItem.Thumb]</value>
		<value condition="Skin.String(ExtendedInfo,5)">$INFO[Container(650).ListItem.Thumb]</value>
	</variable>
	
	<variable name="ExtendedInfoActorRole">
		<value condition="Skin.String(ExtendedInfo,2)">$ADDON[script.extendedinfo 32018]: [COLOR=MediaInfoItemColor2]$INFO[Container(150).ListItem.Property(Character)][/COLOR]</value>
		<value condition="Skin.String(ExtendedInfo,3)">$ADDON[script.extendedinfo 32018]: [COLOR=MediaInfoItemColor2]$INFO[Container(250).ListItem.Property(Character)][/COLOR]</value>
		<value condition="Skin.String(ExtendedInfo,4)">$ADDON[script.extendedinfo 32019]: [COLOR=MediaInfoItemColor2]$INFO[Container(550).ListItem.Property(Job)][/COLOR]</value>
		<value condition="Skin.String(ExtendedInfo,5)">$ADDON[script.extendedinfo 32019]: [COLOR=MediaInfoItemColor2]$INFO[Container(650).ListItem.Property(Job)][/COLOR]</value>
	</variable>
	
	<variable name="ExtendedInfoContainer901Label">
        <value condition="String.IsEqual(Window.Property(type),season)">$INFO[Window.Property(TVShowTitle)]</value>
        <value condition="String.IsEqual(Window.Property(type),episode)">$INFO[Window.Property(season),$LOCALIZE[20373] ,]$INFO[Window.Property(episode), $LOCALIZE[20359] ,]</value>
        <value>$INFO[Window.Property(Genre)]</value>
    </variable>
	
	<variable name="ExtendedInfoDescription">
        <value condition="String.IsEqual(Window.Property(type),episode)">$INFO[Window.Property(Description)]</value>
        <value>$INFO[Window.Property(Plot)]</value>
    </variable>
	
	<variable name="ExtendedInfoContainer250Label">
        <value condition="String.IsEmpty(Window.Property(set.label))">$LOCALIZE[33054]</value>
        <value condition="!String.IsEmpty(Window.Property(set.label))">$LOCALIZE[20457]</value>
    </variable>
	
	<variable name="ExtendedInfoContainer250Label2">
        <value condition="String.IsEmpty(Window.Property(set.label))">$INFO[Container(250).NumItems,, $LOCALIZE[33054]]</value>
        <value condition="!String.IsEmpty(Window.Property(set.label))">$INFO[Window.Property(set.label)]$INFO[Container(250).NumItems, (, $LOCALIZE[342])]</value>
    </variable>
	
	<variable name="ExtraVideoInfoLabel">
		<value condition="String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,set)">$LOCALIZE[31616]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,tvshow)">$LOCALIZE[31617]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,season)">$LOCALIZE[31618]</value>
		<value>$LOCALIZE[31038]</value>
	</variable>
	
	<variable name="ExtendedInfoDialogVideoInfoLabel">
		<value condition="String.Contains(Window.Property(type),movie)">$LOCALIZE[20338]</value>
		<value condition="String.Contains(Window.Property(type),tvshow)">$LOCALIZE[20364]</value>
		<value condition="String.Contains(Window.Property(type),episode)">$LOCALIZE[20359]</value>
		<value condition="String.Contains(Window.Property(type),season)">$LOCALIZE[20373]</value>
	</variable>
	
	<variable name="ExtendedInfoYoutubeActualIcon">
		<value condition="String.IsEqual(Window.Property(type),video)">DefaultVideo.png</value>
		<value condition="String.IsEqual(Window.Property(type),playlist)">DefaultPlaylist.png</value>
		<value condition="String.IsEqual(Window.Property(type),channel)">DefaultTVShows.png</value>
	</variable>
	<!-- END Extended Info -->
	
	<!-- Next Up Notification -->
	<variable name="NextUpInfoPlayButton">
        <value condition="Integer.IsLessOrEqual(Player.TimeRemaining(ss),30)">$INFO[Player.TimeRemaining(ss),gui/play/,.png]</value>
        <value>gui/play/30.png</value>
    </variable>
	
	<variable name="NextUpEpisodeNumber1">
		<value condition="Integer.IsLessOrEqual(Control.GetLabel(3015),9) + Integer.IsLessOrEqual(Control.GetLabel(3016),9)">$INFO[Control.GetLabel(3015),S0,]$INFO[Control.GetLabel(3016),E0,]</value> 
		<value condition="Integer.IsLessOrEqual(Control.GetLabel(3015),9)">$INFO[Control.GetLabel(3015),S0,]$INFO[Control.GetLabel(3016),E,]</value> 
		<value condition="Integer.IsLessOrEqual(Control.GetLabel(3016),9)">$INFO[Control.GetLabel(3015),S,]$INFO[Control.GetLabel(3016),E0,]</value> 
		<value>$INFO[Control.GetLabel(3015),S,]$INFO[Control.GetLabel(3016),E,]</value>
	</variable>
	
	<variable name="NextUpEpisodeNumber2">
		<value condition="Integer.IsLessOrEqual(Control.GetLabel(4008),9) + Integer.IsLessOrEqual(Control.GetLabel(4009),9)">$INFO[Control.GetLabel(4008),S0,]$INFO[Control.GetLabel(4009),E0,]</value> 
		<value condition="Integer.IsLessOrEqual(Control.GetLabel(4008),9)">$INFO[Control.GetLabel(4008),S0,]$INFO[Control.GetLabel(4009),E,]</value> 
		<value condition="Integer.IsLessOrEqual(Control.GetLabel(4009),9)">$INFO[Control.GetLabel(4008),S,]$INFO[Control.GetLabel(4009),E0,]</value> 
		<value>$INFO[Control.GetLabel(4008),S,]$INFO[Control.GetLabel(4009),E,]</value>
	</variable>
	<!-- END Next Up Notification -->
	
	<!-- Skin Helper Service -->
	<variable name="SplashScreenImageDuration">
		<value condition="!String.IsEmpty(Skin.String(SplashScreenImageDuration))">$INFO[Skin.String(SplashScreenImageDuration)]</value>
		<value>5</value>
	</variable>
	<!-- END Skin Helper Service -->
	
	<!-- Movie Genre Icons add-on -->	
	<variable name="MovieGenreIconsAddonVar">
		<value condition="String.IsEqual(Skin.String(MovieGenreIconsAddon.ext),.png)">$INFO[Skin.String(MovieGenreIconsAddon.path)]$INFO[ListItem.Label,,.png]</value>
        <value condition="String.IsEqual(Skin.String(MovieGenreIconsAddon.ext),.jpg)">$INFO[Skin.String(MovieGenreIconsAddon.path)]$INFO[ListItem.Label,,.jpg]</value>
    </variable>
	
	<variable name="MovieGenreIconsAddonContainerVar">
        <value condition="Skin.String(MovieGenreIconsAddon.path,resource://resource.images.moviegenreicons.arctic.zephyr/)">resource://resource.images.moviegenreicons.arctic.zephyr/$INFO[ListItem.Label,,.png]</value>
        <value condition="Skin.String(MovieGenreIconsAddon.path,resource://resource.images.moviegenreicons.coloured/)">resource://resource.images.moviegenreicons.coloured/$INFO[ListItem.Label,,.jpg]</value>
        <value condition="Skin.String(MovieGenreIconsAddon.path,resource://resource.images.moviegenreicons.filmstrip/)">resource://resource.images.moviegenreicons.filmstrip/$INFO[ListItem.Label,,.jpg]</value>
        <value condition="Skin.String(MovieGenreIconsAddon.path,resource://resource.images.moviegenreicons.grey/)">resource://resource.images.moviegenreicons.grey/$INFO[ListItem.Label,,.jpg]</value>
        <value condition="Skin.String(MovieGenreIconsAddon.path,resource://resource.images.moviegenreicons.poster/)">resource://resource.images.moviegenreicons.poster/$INFO[ListItem.Label,,.jpg]</value>
        <value condition="Skin.String(MovieGenreIconsAddon.path,resource://resource.images.moviegenreicons.transparent/)">resource://resource.images.moviegenreicons.transparent/$INFO[ListItem.Label,,.png]</value>
        <value condition="Skin.String(MovieGenreIconsAddon.path,resource://resource.images.moviegenreicons.white/)">resource://resource.images.moviegenreicons.white/$INFO[ListItem.Label,,.jpg]</value>
        <value condition="Skin.String(MovieGenreIconsAddon.path,resource://resource.images.moviegenreicons.xzener-flat/)">resource://resource.images.moviegenreicons.xzener-flat/$INFO[ListItem.Label,,.png]</value>
        <value condition="Skin.String(MovieGenreIconsAddon.path,resource://resource.images.moviegenreicons.xzener-reflection/)">resource://resource.images.moviegenreicons.xzener-reflection/$INFO[ListItem.Label,,.png]</value>
    </variable>
	
	<variable name="MovieGenreIconsAddonNameVar">
        <value condition="!String.IsEmpty(Skin.String(MovieGenreIconsAddon.name))">$INFO[Skin.String(MovieGenreIconsAddon.name)]</value>
        <value>$LOCALIZE[1223]</value>
    </variable>
	<!-- END Movie Genre Icons add-on -->
</includes>